package com.mycompany.editordibujo;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author John Eduardo V.C
 */
public class FrmInterfaz extends javax.swing.JFrame {

    private ArrayList<Point> coordenadas;
    int x1, y1;

    public FrmInterfaz() {

        String nombreArchivo = System.getProperty("user.dir") + "/src/datos/coords.txt";
        initComponents();

        coordenadas = new ArrayList<>();
        x1 = -1;
        y1 = -1;

    }

    private void GuardarCoordenadas(String nombreArchivo) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(nombreArchivo))) {
            for (Point coordenada : coordenadas) {
                bw.write(coordenada.x + ";" + coordenada.y);
                bw.newLine();
            }
            JOptionPane.showMessageDialog(this, "Coordenadas guardadas exitosamente en " + nombreArchivo);
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar las coordenadas.");
        }
    }

    /*private void GuardarCoordenadas(String nombreArchivo) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(nombreArchivo))) {
            Graphics g = pnlLienzo.getGraphics();
            g.setColor(Color.BLACK);

            int x1 = -1;
            int y1 = -1;

            // Recorremos los componentes gráficos del panel
            for (int i = 0; i < pnlLienzo.getComponentCount(); i++) {
                if (pnlLienzo.getComponent(i) instanceof javax.swing.JPanel) {
                    javax.swing.JPanel subPanel = (javax.swing.JPanel) pnlLienzo.getComponent(i);
                    for (int j = 0; j < subPanel.getComponentCount(); j++) {
                        if (subPanel.getComponent(j) instanceof javax.swing.JLabel) {
                            javax.swing.JLabel label = (javax.swing.JLabel) subPanel.getComponent(j);
                            String[] coordinates = label.getText().split("=");
                            int x2 = Integer.parseInt(coordinates[1]);
                            int y2 = Integer.parseInt(coordinates[3]);

                            if (x1 > 0 && y1 > 0) {
                                g.setColor(Color.BLUE);
                                g.drawLine(x1, y1, x2, y2);
                            }
                            x1 = x2;
                            y1 = y2;

                            bw.write(x2 + ";" + y2);
                            bw.newLine();
                        }
                    }
                }
            }

            System.out.println("Coordinates saved to file: " + nombreArchivo);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }*/

 /*try (BufferedWriter bw = new BufferedWriter(new FileWriter(nombreArchivo))) {
            Graphics g = pnlLienzo.getGraphics();
            g.setColor(Color.BLACK);

            int x1 = -1;
            int y1 = -1;

            

            for (int i = 0; i < pnlLienzo.getComponentCount(); i++) {
                int x2 = Integer.parseInt(coordinates[i]);
                int y2 = Integer.parseInt(coordinates[i + 1]);

                if (x1 > 0 && y1 > 0) {
                    g.setColor(Color.BLUE);
                    g.drawLine(x1, y1, x2, y2);
                }
                x1 = x2;
                y1 = y2;

                
                bw.write(x2 + ";" + y2);
                bw.newLine();
            }

            
            bw.close();
            System.out.println("Coordinates saved to file: " + "coords.txt");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }*/

 /* public void saveDrawing(JPanel pnlLienzo) {
        
        
        Properties prop = System.getProperties();
        String nombreArchivo = prop.getProperty("user.dir") + "/src/datos/datos.txt";;
        Graphics g = pnlLienzo.getGraphics();
        g.setColor(Color.red);
        BufferedReader br=Archivo.guardarArchivo(nombreArchivo, textos);
        x1 = -1;
        y1 = -1;
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLienzo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCoordenadas = new javax.swing.JTextField();
        btnAbrir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        seleccionarcombox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        pnlLienzo.setBackground(new java.awt.Color(255, 255, 51));
        pnlLienzo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlLienzoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlLienzoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlLienzoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlLienzoLayout = new javax.swing.GroupLayout(pnlLienzo);
        pnlLienzo.setLayout(pnlLienzoLayout);
        pnlLienzoLayout.setHorizontalGroup(
            pnlLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlLienzoLayout.setVerticalGroup(
            pnlLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        jLabel1.setText("Coordenadas");

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        seleccionarcombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Línea", "Rectangulo", "Ovalo" }));
        seleccionarcombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarcomboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnGuardar)
                                    .addComponent(btnAbrir))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(seleccionarcombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 119, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAbrir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(seleccionarcombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addComponent(pnlLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnlLienzoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLienzoMouseClicked
        //System.out.println(seleccionarcombox.getSelectedItem().equals("Línea")+" items");

       /* int x = evt.getX();
        int y = evt.getY();
        coordenadas.add(new Point(x, y));

        Graphics g = pnlLienzo.getGraphics();
        g.setColor(Color.BLUE);

        if (coordenadas.size() > 1) {
            Point coordenadaAnterior = coordenadas.get(coordenadas.size() - 2);
            if (seleccionarcombox.getSelectedItem().equals("Línea")) {

                g.drawLine(coordenadaAnterior.x, coordenadaAnterior.y, x, y);
            }
            if (seleccionarcombox.getSelectedItem().equals("Rectangulo")) {
                int ancho = Math.abs(x - coordenadaAnterior.x);
            int alto = Math.abs(y - coordenadaAnterior.y);
            int minX = Math.min(x, coordenadaAnterior.x);
            int minY = Math.min(y, coordenadaAnterior.y);
            g.drawRect(minX, minY, ancho, alto);
            }
            if (seleccionarcombox.getSelectedItem().equals("Ovalo")) {
                int radio = 10; // Tamaño del círculo
                g.drawOval(x - radio, y - radio, radio * 2, radio * 2); // Solo contorno del círculo
            }
        }*/


    }//GEN-LAST:event_pnlLienzoMouseClicked

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        String nombreArchivo = Archivo.elegirArchivo();
        BufferedReader br = Archivo.abrirArchivo(nombreArchivo);
        Graphics g = pnlLienzo.getGraphics();
        g.setColor(Color.red);

        x1 = -1;
        y1 = -1;

        try {
            String linea = br.readLine();
            while (linea != null) {
                String[] textos = linea.split(";");
                int x2 = (Integer.parseInt(textos[0]));
                int y2 = (Integer.parseInt(textos[1]));

                if (x1 > 0 && y1 > 0) {
                    g.setColor(Color.BLUE);
                    g.drawLine(x1, y1, x2, y2);
                }
                x1 = x2;
                y1 = y2;

                linea = br.readLine();
            }

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        String nombreArchivo = Archivo.elegirArchivo();
        GuardarCoordenadas(nombreArchivo);

        /*String nombreArchivo = System.getProperty("user.dir") + "/src/datos/coords.txt";
         if (Archivo.guardar(nombreArchivo, pnlLienzo)) {
            JOptionPane.showMessageDialog(null, "Los datos fueron guardados exitosamente");
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo guardar los datos");
        }
         */
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void seleccionarcomboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarcomboxActionPerformed

    }//GEN-LAST:event_seleccionarcomboxActionPerformed

    private void pnlLienzoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLienzoMousePressed
    if (evt.getButton() == MouseEvent.BUTTON1) {
        x1 = evt.getX();
        y1 = evt.getY();
       
    }
    }//GEN-LAST:event_pnlLienzoMousePressed

    private void pnlLienzoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLienzoMouseReleased
        // Dibujar la figura cuando se suelta el botón izquierdo del mouse
    if (evt.getButton() == MouseEvent.BUTTON1) {
        int x = evt.getX();
        int y = evt.getY();
         coordenadas.add(new Point(x, y));
        // Calcular el tamaño y las coordenadas del rectángulo
        int ancho = Math.abs(x - coordenadas.get(0).x);
        int alto = Math.abs(y - coordenadas.get(0).y);
        int minX = Math.min(x, coordenadas.get(0).x);
        int minY = Math.min(y,coordenadas.get(0).y);
        
        // Dibujar la figura dependiendo de la opción seleccionada en el combo box
        Graphics g = pnlLienzo.getGraphics();
        g.setColor(Color.BLUE);
        if (seleccionarcombox.getSelectedItem().equals("Rectangulo")) {
            g.drawRect(minX, minY, ancho, alto);
        } else if (seleccionarcombox.getSelectedItem().equals("Ovalo")) {
            g.drawOval(minX, minY, ancho, alto);
        } else if (seleccionarcombox.getSelectedItem().equals("Línea")) {
            g.drawLine(coordenadas.get(0).x, coordenadas.get(0).y, x, y);
        }
    }
    }//GEN-LAST:event_pnlLienzoMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmInterfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlLienzo;
    private javax.swing.JComboBox<String> seleccionarcombox;
    private javax.swing.JTextField txtCoordenadas;
    // End of variables declaration//GEN-END:variables
}
